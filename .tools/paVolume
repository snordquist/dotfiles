#!/bin/bash
scriptName="paVolume"
scriptBlurb="pulseaudio volume control"
scriptProject="https://github.com/vonbrownie/homebin"
scriptSrc="${scriptProject}/blob/master/${scriptName}"

sinkMute="pactl set-sink-mute @DEFAULT_SINK@"
sinkVol="pactl set-sink-volume @DEFAULT_SINK@"
showVol="volnoti-show $(pamixer --get-volume)"

scriptDetails() {
echo "NAME"
echo -e "\t$scriptName - $scriptBlurb"
echo "USAGE"
echo -e "\t$scriptName [OPTION]"
echo "OPTIONS"
echo -e "\t-h\tscript details"
echo -e "\t-m\ttoggle volume mute"
echo -e "\t-u\tincrease volume +10%"
echo -e "\t-d\tdecrease volume -10%"
echo "REQUIRES"
echo -e "\tpactl - control a running pulseaudio server"
echo -e "\tpamixer - pulseaudio command line mixer"
echo -e "\tvolnoti - lightweight sound notification"
echo "SOURCE"
echo -e "\t<${scriptSrc}>\n"
}

testPath() {
local require=(pactl pamixer volnoti)
for i in ${require[@]}
do
    hash $i 2>/dev/null || \
        { echo -e >&2 "I require '$i' but it's not installed.\n"; \
            scriptDetails; exit 1; }
done
}

notExceed() {
# Max volume not to exceed 100%
# ('volnoti-show' breaks if <volume> not range 0-100)
#if (("$(pamixer --get-volume)" > "100")); then $sinkVol -- 100%; fi
if (("$(pamixer --get-volume)" > "100")); then $sinkVol 100%; fi
}

volMute() {
$sinkMute toggle; [[ $(pamixer --get-mute) = true ]] \
    && volnoti-show -m || $showVol
}

volUp() {
# '--' no longer used in recent versions
#$sinkVol -- +10%; notExceed; $showVol
$sinkVol +10%; notExceed; $showVol
}

volDown() {
#$sinkVol -- -10%; $showVol
$sinkVol -10%; $showVol
}

runOptions() {
while getopts ":hmud" OPT
do
    case $OPT in
        h)
            scriptDetails
            exit 0
            ;;
        m)
            volMute
            exit 0
            ;;
        u)
            volUp
            exit 0
            ;;
        d)
            volDown
            exit 0
            ;;
        *)
            echo "Invalid option '-$OPTARG'"
            exit 1
            ;;
    esac
done
}

#: START
testPath
runOptions "$@"
